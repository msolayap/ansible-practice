---
- name: Data manipulation in playbook
  hosts: all
  become: true
  vars:
    empname:
      - murali
      - krishnan
      - solayappan
    emplist:
      - { f : "murali", l : "solayappan" }
      - { f : "archana", l: "murali" }
      - { f : "prathyu", l : "murali" }

  tasks:
    - name: "display full name"
      ansible.builtin.debug:
        msg: "{{ item }} "
      loop: "{{ empname }}"


    - name: "list employees"
      ansible.builtin.debug:
        msg: "{{ item.f }} {{ item.l }}"
      loop:  "{{emplist}}"

    - name: display all facts
      ansible.builtin.debug:
         msg: "{{mount_num}}/{{ansible_loop.length}} | {{ mp.mount }} @ {{mp.device}}"
      loop: "{{ ansible_facts['mounts'] }}"
      loop_control:
        label: "{{ mp.mount }}"
#        pause: 1
# index tracker var. when using extended, this is not necessary
        index_var: mount_num
# instead of item, define your own meaningful name
        loop_var: mp
# to get additional context on loop execution.
        extended: true


    - name: range test
      ansible.builtin.debug:
         msg: "{{item}}"
      loop: "{{ range(0, 4+1, 2)|list}}"

    - name: "random choice test"
      ansible.builtin.debug:
        msg: "{{state|random}}"
      vars:
        state:
          - todo
          - in_progress
          - completed
          - closed
          - pending
          - blocked
          - hold
      register: random_state

    - name: dit2items test
      ansible.builtin.debug:
        msg: "{{ item.key }} is capital of {{item.value}}"
      loop: "{{state_capitals|dict2items}}"
      vars:
        state_capitals:
          chennai: tamilnadu
          mumbai: maharashtra
          trivandrum: kerala
          hyderabad: andhra pradesh 

    - name: register test
      ansible.builtin.shell:  "{{cmd}}"
      loop:
        - "id"
        - "groups"
        - "echo $SHELL"
      loop_control:
        loop_var: cmd
      register: myoutput


    - name: inspect output
      ansible.builtin.debug:
        msg: "{{myoutput.results}}"


    - name: retry till success
      ansible.builtin.shell: "~/retry-test.sh 5"
#      loop: "{{range(3, 6, 1)|list}}"
#      loop_control:
#        pause: 1
      register: retry_result
      when: inventory_hostname == "dc3auooapppd01a.na.msmps.net"
      until: retry_result.stdout.find("OK") != -1
      retries: 1
      delay: 3
      vars:
        ansible_become: false


    - name: inspect retried result
      ansible.builtin.debug:
        msg: "{{retry_result}}"
      when: inventory_hostname == "dc3auooapppd01a.na.msmps.net"
         
